{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","cat","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,mCACA,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACTC,EADS,kGACuFC,UAAUH,IADjG,SAEII,MAAMF,GAFV,cAETG,EAFS,gBAGMA,EAAKC,OAHX,uBAGRC,EAHQ,EAGRA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT3B,kBAaRM,GAbQ,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA6BtC,OAtBAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,YAAW,WAEPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEb,UAGb,CAACpB,IASIqB,ED1BuBM,CAAa3B,GAA/Ba,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEhB,OACI,qCACA,6BAAKpB,IACJoB,GAAW,mBAAGJ,UAAU,wCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAGKA,GAFAA,EAAIC,aEXxBiB,EAAe,WAAO,IAAD,EACM1C,mBAAS,CAAC,aADhB,mBACvBQ,EADuB,KACXT,EADW,KAO9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAI,SAAAoB,GAAG,OACd,cAAC,EAAD,CAEI7B,SAAW6B,GADNA,YClBjCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3bdd46e9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n            setCategories(categories => [inputValue, ...categories]);\n            setInputValue(\"\");\n        }\n        // console.log(\"Submit hecho\");\n    }\n\n    return (\n        <>\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                />\n        </form>\n        </>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\nexport const getGifs = async(category) => {\n        const url =`https://api.giphy.com/v1/gifs/search?limit=5&api_key=Z6fB0VEF0OJ8eHfzvtx4zk8tRzsLq2m2&q=${encodeURI(category)}`\n        const resp = await fetch(url);\n        const {data} = await resp.json();\n        \n        const gifs = data.map(img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n\n        return gifs;        \n    }\n","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport {GifGridItem} from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images, loading}= useFetchGifs(category);\n        \n        return (\n            <>\n            <h3>{category}</h3>  \n            {loading && <p className=\"animate__animated animate__fadeInDown\">Loading...</p> }\n\n            <div className=\"card-grid\">\n                    {\n                        images.map( (img) => (\n                            <GifGridItem \n                            key={img.id}\n                            \n                            { ...img}/>\n                            ))\n                        }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs(category)\n            .then(imgs => {\n                setTimeout(()=>{\n\n                    setstate({\n                        data:imgs,\n                        loading:false\n                    })\n                }, 3000);\n            })\n\n    },[category])\n\n    // setTimeout( ()=> {\n    //     setstate({\n    //         data:[1,2,3,4,5],\n    //         loading:false\n    //     })\n    // }, 3000 )\n\n    return state;\n\n}\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n// const categories = ['Maradona', 'Peron', 'Nestor'];\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['Maradona']);\n\n    // const handleAdd = () => {\n    //     setCategories(categories => [...categories,'Cristina']);\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n\n            <ol>\n                { \n                    categories.map(cat => (\n                        <GifGrid \n                            key={cat}\n                            category= {cat}/>\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}